---
- name: Install apt-transport-https
  when: ansible_os_family == "Debian"
  become: true
  apt:
    name: "apt-transport-https"
    state: present
    #    update_cache: yes

- name: Add Docker APT GPG key
  when: ansible_os_family == "Debian"
  become: true
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg

- name: Add Docker APT repository
  when: ansible_os_family == "Debian"
  become: true
  apt_repository:
    repo: deb https://download.docker.com/linux/ubuntu bionic stable
    state: present
    filename: 'docker'

- name: Install CentOS Utils (RHEL/CentOS)
  when: ansible_os_family == "RedHat"
  become: true
  yum:
    name:
      - yum-utils
      - device-mapper-persistent-data
      - lvm2
    state: present
    update_cache: yes

- name: Add Docker yum repository
  when: ansible_os_family == "RedHat"
  become: true
  shell: yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo

- name: Install docker engine (RHEL/CentOS)
  when: ansible_os_family == "RedHat"
  become: true
  yum:
    name: 
      - docker-ce
    state: present
    update_cache: yes

- name: Setup Docker daemon.json (RHEL/CentOS)
  when: ansible_os_family == "RedHat"
  become: true
  shell: 
    cmd: |
      cat > /etc/docker/daemon.json <<EOF
      {
        "exec-opts": ["native.cgroupdriver=systemd"],
        "log-driver": "json-file",
        "log-opts": {
          "max-size": "100m"
        },
        "storage-driver": "overlay2",
        "storage-opts": [
          "overlay2.override_kernel_check=true"
        ]
      }
      EOF
      mkdir -p /etc/systemd/system/docker.service.d
      systemctl daemon-reload
      systemctl restart docker

- name: Install docker engine (Debian/Ubuntu)
  when: ansible_os_family == "Debian"
  become: true
  apt:
    update_cache: yes
    name: "docker-ce={{ docker_version }}*"
    state: present

- name: Hold docker version
  when: ansible_os_family == "Debian"
  become: true
  dpkg_selections:
    name: docker-ce
    selection: hold
